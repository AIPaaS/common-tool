apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'pmd'
apply plugin: 'findbugs'
apply plugin: 'checkstyle'

compileJava.dependsOn clean

sourceCompatibility = 1.7

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    exclude group: 'log4j', module: 'log4j'
    exclude group: "org.slf4j", module: "slf4j-log4j12"
}
    
checkstyleMain {
    ignoreFailures = false
    reports {
        include ( '**/*.java')
        xml {
           destination = new File(rootDir, "reports/checkstyle/${project.name}.xml" )
        }
    }
    configFile = new File(rootDir, 'checkstyle.xml')
}

checkstyleTest {
	ignoreFailures = false
	reports {
		include ( '**/*.java')
		xml {
			destination = new File(rootDir, "reports/checkstyle/${project.name}_test.xml" )
		}
	}
	configFile = new File(rootDir, 'checkstyle.xml')
}

findbugsMain {
	ignoreFailures = true
	reports {
        include ( '**/*.java')
        xml {
           destination = new File(rootDir, "reports/findbugs/${project.name}.xml" )
        }
    }
	effort = "max"
	reportLevel = "high"
	omitVisitors = ["FindNonShortCircuit"]
}

findbugsTest {
	ignoreFailures = true
	reports {
        include ( '**/*.java')
        xml {
           destination = new File(rootDir, "reports/findbugs/${project.name}_test.xml" )
        }
    }
	effort = "max"
	reportLevel = "high"
	omitVisitors = ["FindNonShortCircuit"]
}

pmdMain {
	ignoreFailures = true
	reports {
        include ( '**/*.java')
        xml {
           destination = new File(rootDir, "reports/pmd/${project.name}.xml" )
        }
    }
}

pmdTest {
	ignoreFailures = true
	reports {
        include ( '**/*.java')
        xml {
           destination = new File(rootDir, "reports/pmd/${project.name}_test.xml" )
        }
    }
}

[compileJava, compileTestJava,javadoc]*.options*.encoding = 'UTF-8'

repositories {
    maven{ url "http://10.1.228.199:18081/nexus/content/groups/public/"  }
}

sourceSets {
    main {
        java { srcDirs = ['src/main/java']}
    }
}

ext {
	moduleName = "ipaas-common";
	moduleVersion = version != "unspecified"?version:'0.3.1'
	moduleMode = project.hasProperty('mode') ? project.getProperty('mode') : 'R'
	if(moduleMode == 'S'){
		moduleVersion = moduleVersion + "-SNAPSHOT";
	}
	publishUserName = "devadm"
	publishUserPassword = "Devadm@1212"
	publishSnapShotsURL="http://10.1.228.199:18081/nexus/content/repositories/snapshots/"
	publishReleaseURL="http://10.1.228.199:18081/nexus/content/repositories/releases/"
	builtBy="gradle 2.1" 
} 

group = 'com.ai'

dependencies{
	compile "org.apache.logging.log4j:log4j-core:2.2"
	compile "org.apache.logging.log4j:log4j-slf4j-impl:2.2"
	compile "org.apache.logging.log4j:log4j-1.2-api:2.2"
	
	compile 'com.google.code.gson:gson:2.6.2'
	
	compile "com.esotericsoftware.kryo:kryo:2.24.0"
	compile "de.javakaffee:kryo-serializers:0.27"
	
    compile 'commons-beanutils:commons-beanutils:1.9.2'
    
    compile 'org.apache.commons:commons-lang3:3.3.2'
    compile 'org.apache.httpcomponents:httpclient:4.5.2'
    
  	compile ('org.apache.curator:curator-framework:2.7.1'){
        exclude group: "org.slf4j", module: "slf4j-api"
        exclude group: "log4j", module: "log4j"
        exclude group: "org.apache.zookeeper", module: "zookeeper"
    }
    compile ('org.apache.curator:curator-recipes:2.7.1'){
        exclude group: "org.slf4j", module: "slf4j-api"
        exclude group: "log4j", module: "log4j"
    }
    compile ('org.apache.zookeeper:zookeeper:3.4.6'){
        exclude group: "org.slf4j", module: "slf4j-api"
        exclude group: "org.slf4j", module: "slf4j-log4j12"
        exclude group: "log4j", module: "log4j"
    }

    testCompile(
		"org.springframework:spring-test:4.1.6.RELEASE",
		"junit:junit:4.11"
	)
}


jar {

	println "Hello $moduleVersion" 
    baseName moduleName
    version moduleVersion
	manifest {
        attributes 'packageName': moduleName, 'Built-By': builtBy,'create-date': new Date().format('yyyy-MM-dd HH:mm:ss')
    }
}
task copyFiles << { 
        copy{ 
                from configurations.compile 
                into "$buildDir/copy" 
        } 
} 

task sourcesJar(type: Jar, dependsOn: classes) {
	baseName moduleName
    version moduleVersion
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

publish.dependsOn build 


publishing {
    publications {
        mavenJar(MavenPublication) {
        	groupId group
        	artifactId "${moduleName}"
            artifact sourcesJar
            version moduleVersion
            pom.withXml {
	            asNode().children().last() + {
	                delegate.dependencies {
                    	delegate.dependency {
                                delegate.groupId("org.apache.logging.log4j")
                                delegate.artifactId("log4j-core")
                                delegate.version("2.2")
                        } 
                    	delegate.dependency {
                                delegate.groupId("org.apache.logging.log4j")
                                delegate.artifactId("log4j-slf4j-impl")
                                delegate.version("2.2")
                        } 
                    	delegate.dependency {
                                delegate.groupId("org.apache.logging.log4j")
                                delegate.artifactId("log4j-1.2-api")
                                delegate.version("2.2")
                        }                                                 
  						delegate.dependency {
                                delegate.groupId("com.google.code.gson")
                                delegate.artifactId("gson")
                                delegate.version("2.6.2")
                        }     
  						delegate.dependency {
                                delegate.groupId("com.esotericsoftware.kryo")
                                delegate.artifactId("kryo")
                                delegate.version("2.24.0")
                        } 
  						delegate.dependency {
                                delegate.groupId("de.javakaffee")
                                delegate.artifactId("kryo-serializers")
                                delegate.version("0.27")
                        }                                                                 

                        delegate.dependency {
                            delegate.groupId("commons-beanutils")
                            delegate.artifactId("commons-beanutils")
                            delegate.version("1.9.2")
                        }
                        delegate.dependency {
                            delegate.groupId("org.apache.commons")
                            delegate.artifactId("commons-lang3")
                            delegate.version("3.3.2")
                        }
						delegate.dependency {
                            delegate.groupId("org.apache.curator")
                            delegate.artifactId("curator-client")
                            delegate.version("2.7.1")
                            delegate.exclusions{
                                delegate.exclusion{
                                    delegate.groupId("org.slf4j")
                                    delegate.artifactId("slf4j-api")
                                }
                                delegate.exclusion{
                                    delegate.groupId("log4j")
                                    delegate.artifactId("log4j")
                                }
                         		delegate.exclusion{
                                    delegate.groupId("org.apache.zookeeper")
                                    delegate.artifactId("zookeeper")
                                }                                
                            }
                        }                           
						delegate.dependency {
                            delegate.groupId("org.apache.curator")
                            delegate.artifactId("curator-framework")
                            delegate.version("2.7.1")
                            delegate.exclusions{
                                delegate.exclusion{
                                    delegate.groupId("org.slf4j")
                                    delegate.artifactId("slf4j-api")
                                }
                                delegate.exclusion{
                                    delegate.groupId("log4j")
                                    delegate.artifactId("log4j")
                                }
                         		delegate.exclusion{
                                    delegate.groupId("org.apache.zookeeper")
                                    delegate.artifactId("zookeeper")
                                }                                
                            }
                        }
						                     

						delegate.dependency {
                            delegate.groupId("org.apache.zookeeper")
                            delegate.artifactId("zookeeper")
                            delegate.version("3.4.6")
                            delegate.exclusions{
                                delegate.exclusion{
                                    delegate.groupId("org.slf4j")
                                    delegate.artifactId("slf4j-api")
                                }
                                delegate.exclusion{
                                    delegate.groupId("log4j")
                                    delegate.artifactId("log4j")
                                }
                         		delegate.exclusion{
                                    delegate.groupId("org.slf4j")
                                    delegate.artifactId("slf4j-log4j12")
                                }                                
                            }
                        }
                        
                        delegate.dependency {
                            delegate.groupId("org.apache.commons")
                            delegate.artifactId("commons-pool2")
                            delegate.version("2.2")
                            delegate.exclusions{
                                delegate.exclusion{
                                    delegate.groupId("org.slf4j")
                                    delegate.artifactId("slf4j-api")
                                }
                                delegate.exclusion{
                                    delegate.groupId("log4j")
                                    delegate.artifactId("log4j")
                                }
                            }
                        }
                        delegate.dependency {
                            delegate.groupId("org.apache.curator")
                            delegate.artifactId("curator-recipes")
                            delegate.version("2.7.1")
                            delegate.exclusions{
                                delegate.exclusion{
                                    delegate.groupId("org.slf4j")
                                    delegate.artifactId("slf4j-api")
                                }
                                delegate.exclusion{
                                    delegate.groupId("log4j")
                                    delegate.artifactId("log4j")
                                }
                            }
                        }
                   }
                }
             }
       	} 
       	publishing.publications.create("${moduleName}", MavenPublication) {
            groupId group
            artifactId moduleName
            version moduleVersion
            artifact  jar
            pom.withXml {
	            asNode().children().last() + {
	                delegate.dependencies {
                    	delegate.dependency {
                                delegate.groupId("org.apache.logging.log4j")
                                delegate.artifactId("log4j-core")
                                delegate.version("2.2")
                        } 
                    	delegate.dependency {
                                delegate.groupId("org.apache.logging.log4j")
                                delegate.artifactId("log4j-slf4j-impl")
                                delegate.version("2.2")
                        } 
                    	delegate.dependency {
                                delegate.groupId("org.apache.logging.log4j")
                                delegate.artifactId("log4j-1.2-api")
                                delegate.version("2.2")
                        }                                                 
  						delegate.dependency {
                                delegate.groupId("com.google.code.gson")
                                delegate.artifactId("gson")
                                delegate.version("2.6.2")
                        }     
  						delegate.dependency {
                                delegate.groupId("com.esotericsoftware.kryo")
                                delegate.artifactId("kryo")
                                delegate.version("2.24.0")
                        } 
  						delegate.dependency {
                                delegate.groupId("de.javakaffee")
                                delegate.artifactId("kryo-serializers")
                                delegate.version("0.27")
                        }                                                                 

                        delegate.dependency {
                            delegate.groupId("commons-beanutils")
                            delegate.artifactId("commons-beanutils")
                            delegate.version("1.9.2")
                        }
                        delegate.dependency {
                            delegate.groupId("org.apache.commons")
                            delegate.artifactId("commons-lang3")
                            delegate.version("3.3.2")
                        }
						delegate.dependency {
                            delegate.groupId("org.apache.curator")
                            delegate.artifactId("curator-client")
                            delegate.version("2.7.1")
                            delegate.exclusions{
                                delegate.exclusion{
                                    delegate.groupId("org.slf4j")
                                    delegate.artifactId("slf4j-api")
                                }
                                delegate.exclusion{
                                    delegate.groupId("log4j")
                                    delegate.artifactId("log4j")
                                }
                         		delegate.exclusion{
                                    delegate.groupId("org.apache.zookeeper")
                                    delegate.artifactId("zookeeper")
                                }                                
                            }
                        }                           
						delegate.dependency {
                            delegate.groupId("org.apache.curator")
                            delegate.artifactId("curator-framework")
                            delegate.version("2.7.1")
                            delegate.exclusions{
                                delegate.exclusion{
                                    delegate.groupId("org.slf4j")
                                    delegate.artifactId("slf4j-api")
                                }
                                delegate.exclusion{
                                    delegate.groupId("log4j")
                                    delegate.artifactId("log4j")
                                }
                         		delegate.exclusion{
                                    delegate.groupId("org.apache.zookeeper")
                                    delegate.artifactId("zookeeper")
                                }                                
                            }
                        }
						                     

						delegate.dependency {
                            delegate.groupId("org.apache.zookeeper")
                            delegate.artifactId("zookeeper")
                            delegate.version("3.4.6")
                            delegate.exclusions{
                                delegate.exclusion{
                                    delegate.groupId("org.slf4j")
                                    delegate.artifactId("slf4j-api")
                                }
                                delegate.exclusion{
                                    delegate.groupId("log4j")
                                    delegate.artifactId("log4j")
                                }
                         		delegate.exclusion{
                                    delegate.groupId("org.slf4j")
                                    delegate.artifactId("slf4j-log4j12")
                                }                                
                            }
                        }
                        
                        delegate.dependency {
                            delegate.groupId("org.apache.commons")
                            delegate.artifactId("commons-pool2")
                            delegate.version("2.2")
                            delegate.exclusions{
                                delegate.exclusion{
                                    delegate.groupId("org.slf4j")
                                    delegate.artifactId("slf4j-api")
                                }
                                delegate.exclusion{
                                    delegate.groupId("log4j")
                                    delegate.artifactId("log4j")
                                }
                            }
                        }
                        delegate.dependency {
                            delegate.groupId("org.apache.curator")
                            delegate.artifactId("curator-recipes")
                            delegate.version("2.7.1")
                            delegate.exclusions{
                                delegate.exclusion{
                                    delegate.groupId("org.slf4j")
                                    delegate.artifactId("slf4j-api")
                                }
                                delegate.exclusion{
                                    delegate.groupId("log4j")
                                    delegate.artifactId("log4j")
                                }
                            }
                        }
                        
                    }
	            }
	        }
        }
    }
    
    repositories {
        maven {
            credentials {
                username = publishUserName
                password = publishUserPassword
            }
            if(moduleVersion.endsWith('-SNAPSHOT')) {
                url publishSnapShotsURL
            } else {
                url publishReleaseURL
            }
        }
    }
}

